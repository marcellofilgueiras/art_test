# -*- coding: utf-8 -*-
"""sqlite3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/107ij5krjx5qC1AbWx8SYtbuswjxdG5ni

Considere as tabelas abaixo, que fazem parte do banco de dados de uma loja virtual:

Tabela Clientes:

O Arquivo do banco de dados em SQLLITE pode ser encontrado na pasta do projeto. Para abri-lo basta:
"""

from google.colab import drive

# montar o drive pra ter acesso a
# arquivos do drive

drive.mount('/content/drive')

import sqlite3
import pandas as pd

# 1. Conectar ao banco SQLite
con = sqlite3.connect("/content/drive/MyDrive/py/data/Loja.sqlite")

# Listar tabelas disponíveis
tabelas = pd.read_sql_query("SELECT name FROM sqlite_master WHERE type='table';", con)
tabela_cl = pd.read_sql_query("SELECT * FROM Clientes;", con)

print(con)
print(tabelas)
print(tabela_cl)

"""
1 – Escreva uma consulta SQL que mostre a lista de todos os clientes e seus respectivos pedidos, mesmo que o cliente não tenha feito nenhum pedido. A tabela resultante deve conter as colunas: Nome, PedidoID, DataPedido e ValorTotal."""

# Consulta 1 – Clientes e seus pedidos (mesmo sem pedidos)
query1 = """SELECT  c.Nome, p.PedidoID, p.DataPedido, p.ValorTotal
            FROM   Clientes c
            LEFT JOIN    Pedidos p
            ON c.ClienteID = p.ClienteID;"""


resultado1 = pd.read_sql_query(query1, con)

resultado1

# "A tabela deve conter todos os clientes e os pedidos"
# "MESMO QUE O CLIENTE NÃO TENHA FEITO NENHUM PEDIDO."
# no caso Maria não tem produto

"""Cade o cliente 4."""

query10 = """SELECT  p.ClienteID, p.PedidoID, p.DataPedido, p.ValorTotal
            FROM   Clientes c
            LEFT JOIN    Pedidos p
            ON c.ClienteID = p.ClienteID;"""
resultado10 = pd.read_sql_query(query10, con)

resultado10

"""2 – Escreva uma consulta SQL que exiba o total de pedidos realizados e o valor total de pedidos por cliente, apenas para os clientes que possuem pedidos registrados. A tabela resultante deve conter as colunas: Nome, QuantidadePedidos e ValorTotalPedidos."""

# 3. Consulta 2 – Total de pedidos e valor total por cliente (somente com pedidos)
query2 = """
SELECT  c.Nome,
  COUNT(p.PedidoID) AS QuantidadePedidos,
  SUM(p.ValorTotal) AS ValorTotalPedidos
FROM
  Clientes c
JOIN
  Pedidos p ON c.ClienteID = p.ClienteID
GROUP BY
  c.Nome;
"""

resultado2 = pd.read_sql_query(query2, con)

resultado2

"""de novo, some o pedidio do cliente 4, que não temos o nome, mas sabemos que ele existe e fez um pedido.


3 – Escreva uma consulta SQL que exiba os pedidos que não possuem pagamentos registrados. A tabela resultante deve conter as colunas: PedidoID, DataPedido e ValorTotal."""

#  Consulta 3 – Pedidos sem pagamento registrado
query3 = """
SELECT   p.PedidoID,  p.DataPedido,  p.ValorTotal
FROM   Pedidos p
LEFT JOIN
  Pagamentos pg ON p.PedidoID = pg.PedidoID
WHERE
  pg.PagamentoID IS NULL;
"""
resultado3 = pd.read_sql_query(query3, con)

resultado3
